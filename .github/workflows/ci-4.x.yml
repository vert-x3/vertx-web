name: vertx-web (4.x)
on:
  push:
    branches:
      - master
      - '[0-9]+.[0-9x]+'
  pull_request:
    branches:
      - master
      - '[0-9]+.[0-9x]+'
  schedule:
    - cron:  '0 4 * * *'
jobs:
  Test:
    name: Run tests
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        jdk: [8]
        include:
          - os: ubuntu-latest
            jdk: 25
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.jdk }}
          distribution: temurin
      - name: Run tests
        run: mvn -s .github/maven-ci-settings.xml clean verify -B
  Apollo-Link-Tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [18.13.0]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install JDK
        uses: actions/setup-java@v2
        with:
          java-version: 8
          distribution: temurin
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: sh vertx-web-graphql/start-apollo-tests-server.sh
      - run: npm install
        working-directory: vertx-web-graphql/tests/apollo
      - run: npm run test
        working-directory: vertx-web-graphql/tests/apollo
      - uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: ApolloTestsServer.log
          path: ~/ApolloTestsServer.log
      - run: sh stop-apollo-tests-server.sh
        working-directory: vertx-web-graphql
        if: ${{ always() }}
  GraphQLWS-Tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [18.13.0]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install JDK
        uses: actions/setup-java@v2
        with:
          java-version: 8
          distribution: temurin
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: sh vertx-web-graphql/start-graphql-ws-tests-server.sh
      - run: npm install
        working-directory: vertx-web-graphql/tests/graphql-ws
      - run: npm run test
        working-directory: vertx-web-graphql/tests/graphql-ws
      - uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: GraphQLWSTestsServer.log
          path: ~/GraphQLWSTestsServer.log
      - run: sh stop-graphql-ws-tests-server.sh
        working-directory: vertx-web-graphql
        if: ${{ always() }}
  SockJS-WriteHandler-Tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [16.13.1]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install JDK
        uses: actions/setup-java@v2
        with:
          java-version: 8
          distribution: temurin
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: sh vertx-web/start-sockjs-write-handler-tests-server.sh
      - run: npm install
        working-directory: vertx-web/tests/sockjs
      - run: npm run test
        working-directory: vertx-web/tests/sockjs
      - uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: SockJSWriteHandlerTestServer.log
          path: ~/SockJSWriteHandlerTestServer.log
      - run: sh stop-sockjs-write-handler-tests-server.sh
        working-directory: vertx-web
        if: ${{ always() }}
  Deploy:
    name: Deploy to OSSRH
    if: ${{ github.repository_owner == 'vert-x3' && (github.event_name == 'push' || github.event_name == 'schedule') }}
    needs: [Test, Apollo-Link-Tests, SockJS-WriteHandler-Tests]
    runs-on: ubuntu-latest
    env:
      VERTX_NEXUS_USERNAME: ${{ secrets.VERTX_NEXUS_USERNAME }}
      VERTX_NEXUS_PASSWORD: ${{ secrets.VERTX_NEXUS_PASSWORD }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install JDK
        uses: actions/setup-java@v2
        with:
          java-version: 8
          distribution: temurin
      - name: Get project version
        run: echo "PROJECT_VERSION=$(mvn org.apache.maven.plugins:maven-help-plugin:evaluate -Dexpression=project.version -B | grep -v '\[')" >> $GITHUB_ENV
      - name: Maven deploy
        if: ${{ endsWith(env.PROJECT_VERSION, '-SNAPSHOT') }}
        run: mvn deploy -s .github/maven-cd-settings.xml -DskipTests -B
